/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutGuestImport } from './routes/_layout/_guest'
import { Route as LayoutAuthImport } from './routes/_layout/_auth'
import { Route as LayoutAuthProjectProjectIdIndexImport } from './routes/_layout/_auth/project/$projectId/index'
import { Route as LayoutAuthProjectProjectIdShareImport } from './routes/_layout/_auth/project/$projectId/share'

// Create Virtual Routes

const LayoutGuestRegisterLazyImport = createFileRoute(
  '/_layout/_guest/register',
)()
const LayoutGuestLoginLazyImport = createFileRoute('/_layout/_guest/login')()
const LayoutAuthProjectIndexLazyImport = createFileRoute(
  '/_layout/_auth/project/',
)()
const LayoutAuthDashboardIndexLazyImport = createFileRoute(
  '/_layout/_auth/dashboard/',
)()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutGuestRoute = LayoutGuestImport.update({
  id: '/_guest',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAuthRoute = LayoutAuthImport.update({
  id: '/_auth',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutGuestRegisterLazyRoute = LayoutGuestRegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => LayoutGuestRoute,
} as any).lazy(() =>
  import('./routes/_layout/_guest/register.lazy').then((d) => d.Route),
)

const LayoutGuestLoginLazyRoute = LayoutGuestLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => LayoutGuestRoute,
} as any).lazy(() =>
  import('./routes/_layout/_guest/login.lazy').then((d) => d.Route),
)

const LayoutAuthProjectIndexLazyRoute = LayoutAuthProjectIndexLazyImport.update(
  {
    path: '/project/',
    getParentRoute: () => LayoutAuthRoute,
  } as any,
).lazy(() =>
  import('./routes/_layout/_auth/project/index.lazy').then((d) => d.Route),
)

const LayoutAuthDashboardIndexLazyRoute =
  LayoutAuthDashboardIndexLazyImport.update({
    path: '/dashboard/',
    getParentRoute: () => LayoutAuthRoute,
  } as any).lazy(() =>
    import('./routes/_layout/_auth/dashboard/index.lazy').then((d) => d.Route),
  )

const LayoutAuthProjectProjectIdIndexRoute =
  LayoutAuthProjectProjectIdIndexImport.update({
    path: '/project/$projectId/',
    getParentRoute: () => LayoutAuthRoute,
  } as any)

const LayoutAuthProjectProjectIdShareRoute =
  LayoutAuthProjectProjectIdShareImport.update({
    path: '/project/$projectId/share',
    getParentRoute: () => LayoutAuthRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/_auth': {
      id: '/_layout/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutAuthImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/_guest': {
      id: '/_layout/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutGuestImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/_guest/login': {
      id: '/_layout/_guest/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LayoutGuestLoginLazyImport
      parentRoute: typeof LayoutGuestImport
    }
    '/_layout/_guest/register': {
      id: '/_layout/_guest/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof LayoutGuestRegisterLazyImport
      parentRoute: typeof LayoutGuestImport
    }
    '/_layout/_auth/dashboard/': {
      id: '/_layout/_auth/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutAuthDashboardIndexLazyImport
      parentRoute: typeof LayoutAuthImport
    }
    '/_layout/_auth/project/': {
      id: '/_layout/_auth/project/'
      path: '/project'
      fullPath: '/project'
      preLoaderRoute: typeof LayoutAuthProjectIndexLazyImport
      parentRoute: typeof LayoutAuthImport
    }
    '/_layout/_auth/project/$projectId/share': {
      id: '/_layout/_auth/project/$projectId/share'
      path: '/project/$projectId/share'
      fullPath: '/project/$projectId/share'
      preLoaderRoute: typeof LayoutAuthProjectProjectIdShareImport
      parentRoute: typeof LayoutAuthImport
    }
    '/_layout/_auth/project/$projectId/': {
      id: '/_layout/_auth/project/$projectId/'
      path: '/project/$projectId'
      fullPath: '/project/$projectId'
      preLoaderRoute: typeof LayoutAuthProjectProjectIdIndexImport
      parentRoute: typeof LayoutAuthImport
    }
  }
}

// Create and export the route tree

interface LayoutAuthRouteChildren {
  LayoutAuthDashboardIndexLazyRoute: typeof LayoutAuthDashboardIndexLazyRoute
  LayoutAuthProjectIndexLazyRoute: typeof LayoutAuthProjectIndexLazyRoute
  LayoutAuthProjectProjectIdShareRoute: typeof LayoutAuthProjectProjectIdShareRoute
  LayoutAuthProjectProjectIdIndexRoute: typeof LayoutAuthProjectProjectIdIndexRoute
}

const LayoutAuthRouteChildren: LayoutAuthRouteChildren = {
  LayoutAuthDashboardIndexLazyRoute: LayoutAuthDashboardIndexLazyRoute,
  LayoutAuthProjectIndexLazyRoute: LayoutAuthProjectIndexLazyRoute,
  LayoutAuthProjectProjectIdShareRoute: LayoutAuthProjectProjectIdShareRoute,
  LayoutAuthProjectProjectIdIndexRoute: LayoutAuthProjectProjectIdIndexRoute,
}

const LayoutAuthRouteWithChildren = LayoutAuthRoute._addFileChildren(
  LayoutAuthRouteChildren,
)

interface LayoutGuestRouteChildren {
  LayoutGuestLoginLazyRoute: typeof LayoutGuestLoginLazyRoute
  LayoutGuestRegisterLazyRoute: typeof LayoutGuestRegisterLazyRoute
}

const LayoutGuestRouteChildren: LayoutGuestRouteChildren = {
  LayoutGuestLoginLazyRoute: LayoutGuestLoginLazyRoute,
  LayoutGuestRegisterLazyRoute: LayoutGuestRegisterLazyRoute,
}

const LayoutGuestRouteWithChildren = LayoutGuestRoute._addFileChildren(
  LayoutGuestRouteChildren,
)

interface LayoutRouteChildren {
  LayoutAuthRoute: typeof LayoutAuthRouteWithChildren
  LayoutGuestRoute: typeof LayoutGuestRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAuthRoute: LayoutAuthRouteWithChildren,
  LayoutGuestRoute: LayoutGuestRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutGuestRouteWithChildren
  '/login': typeof LayoutGuestLoginLazyRoute
  '/register': typeof LayoutGuestRegisterLazyRoute
  '/dashboard': typeof LayoutAuthDashboardIndexLazyRoute
  '/project': typeof LayoutAuthProjectIndexLazyRoute
  '/project/$projectId/share': typeof LayoutAuthProjectProjectIdShareRoute
  '/project/$projectId': typeof LayoutAuthProjectProjectIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutGuestRouteWithChildren
  '/login': typeof LayoutGuestLoginLazyRoute
  '/register': typeof LayoutGuestRegisterLazyRoute
  '/dashboard': typeof LayoutAuthDashboardIndexLazyRoute
  '/project': typeof LayoutAuthProjectIndexLazyRoute
  '/project/$projectId/share': typeof LayoutAuthProjectProjectIdShareRoute
  '/project/$projectId': typeof LayoutAuthProjectProjectIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/_auth': typeof LayoutAuthRouteWithChildren
  '/_layout/_guest': typeof LayoutGuestRouteWithChildren
  '/_layout/_guest/login': typeof LayoutGuestLoginLazyRoute
  '/_layout/_guest/register': typeof LayoutGuestRegisterLazyRoute
  '/_layout/_auth/dashboard/': typeof LayoutAuthDashboardIndexLazyRoute
  '/_layout/_auth/project/': typeof LayoutAuthProjectIndexLazyRoute
  '/_layout/_auth/project/$projectId/share': typeof LayoutAuthProjectProjectIdShareRoute
  '/_layout/_auth/project/$projectId/': typeof LayoutAuthProjectProjectIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/dashboard'
    | '/project'
    | '/project/$projectId/share'
    | '/project/$projectId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/dashboard'
    | '/project'
    | '/project/$projectId/share'
    | '/project/$projectId'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/_auth'
    | '/_layout/_guest'
    | '/_layout/_guest/login'
    | '/_layout/_guest/register'
    | '/_layout/_auth/dashboard/'
    | '/_layout/_auth/project/'
    | '/_layout/_auth/project/$projectId/share'
    | '/_layout/_auth/project/$projectId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_auth",
        "/_layout/_guest"
      ]
    },
    "/_layout/_auth": {
      "filePath": "_layout/_auth.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_auth/dashboard/",
        "/_layout/_auth/project/",
        "/_layout/_auth/project/$projectId/share",
        "/_layout/_auth/project/$projectId/"
      ]
    },
    "/_layout/_guest": {
      "filePath": "_layout/_guest.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_guest/login",
        "/_layout/_guest/register"
      ]
    },
    "/_layout/_guest/login": {
      "filePath": "_layout/_guest/login.lazy.tsx",
      "parent": "/_layout/_guest"
    },
    "/_layout/_guest/register": {
      "filePath": "_layout/_guest/register.lazy.tsx",
      "parent": "/_layout/_guest"
    },
    "/_layout/_auth/dashboard/": {
      "filePath": "_layout/_auth/dashboard/index.lazy.tsx",
      "parent": "/_layout/_auth"
    },
    "/_layout/_auth/project/": {
      "filePath": "_layout/_auth/project/index.lazy.tsx",
      "parent": "/_layout/_auth"
    },
    "/_layout/_auth/project/$projectId/share": {
      "filePath": "_layout/_auth/project/$projectId/share.tsx",
      "parent": "/_layout/_auth"
    },
    "/_layout/_auth/project/$projectId/": {
      "filePath": "_layout/_auth/project/$projectId/index.tsx",
      "parent": "/_layout/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
